<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Leonidas Simopoulos&#39;s blog</title>
    <link>https://lsimopoulos.github.io/post/</link>
    <description>Recent content in Posts on Leonidas Simopoulos&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](http://gohugo.io).</copyright>
    <lastBuildDate>Mon, 03 Jul 2017 20:11:26 +0200</lastBuildDate>
    
	<atom:link href="https://lsimopoulos.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Integrate Autofac with MVVM Light</title>
      <link>https://lsimopoulos.github.io/post/integrating_autofac_with_mvvmlight/</link>
      <pubDate>Mon, 03 Jul 2017 20:11:26 +0200</pubDate>
      
      <guid>https://lsimopoulos.github.io/post/integrating_autofac_with_mvvmlight/</guid>
      <description>I am going to show how to integrate Autofac with the Mvvm Light easy and quick for most simple scenarios. Autofac is very powerful IOC Container and MVVM Light is one of the best MVVM frameworks.
1.Create a new project from mvvm light templates in the visual studio
2.Install Autofac and Autofac.Extras.CommonServiceLocator as NuGet packages.
3.Expand the folder ViewModel on the SolutionExplorer in the Visual Studio and open the file ViewModelLocator.</description>
    </item>
    
    <item>
      <title>Supervising controller pattern and MVVM</title>
      <link>https://lsimopoulos.github.io/post/mvvm_supervising_controller_pattern/</link>
      <pubDate>Mon, 26 Jun 2017 20:11:26 +0200</pubDate>
      
      <guid>https://lsimopoulos.github.io/post/mvvm_supervising_controller_pattern/</guid>
      <description>I have been familiar with MVVM framework since the era of Silverlight. I am always trying to follow the approach of &amp;ldquo;clean code behind&amp;rdquo; when it&amp;rsquo;s achievable. One of the big benefits of MVVM is that ,except of the separation of concern, you can make unit tests covering all the logic in the ViewModels.
When using the MVVM pattern sometimes you encounter some challenges. Some functions need to be defined on the code behind which are tight coupled with GUI and include some logic.</description>
    </item>
    
    <item>
      <title>Android: connection timeout error on emulator</title>
      <link>https://lsimopoulos.github.io/post/android_emulator_connection_timeout/</link>
      <pubDate>Sat, 24 Jun 2017 13:20:43 +0200</pubDate>
      
      <guid>https://lsimopoulos.github.io/post/android_emulator_connection_timeout/</guid>
      <description>Usually when I am developing mobile apps, I host the server on the cloud. But this time I decided to host it locally on the same machine where I&amp;rsquo;m developing the android app. When I tried to connect to the local webserver from the android emulator by using the local ip, I got connection timeout error after few seconds.
What did I try and it did not work:  Made sure that the required ports of firewall were open.</description>
    </item>
    
    <item>
      <title>Host Hugo on github pages</title>
      <link>https://lsimopoulos.github.io/post/hosting_hugo_on_github_pages/</link>
      <pubDate>Wed, 14 Jun 2017 17:35:12 +0200</pubDate>
      
      <guid>https://lsimopoulos.github.io/post/hosting_hugo_on_github_pages/</guid>
      <description>This is my first post. I used hugo to make this blog. I totally recommend it. It&amp;rsquo;s really quick to create a blog without the need to install anything extra(no plugins etc).
It took me soIme time to figure out how to host the blog on github pages. I was struggling to deploy the hugo generated static website in github via /docs folder on master branch. It didn&amp;rsquo;t work. Apparently it does not work having docs folder and hugo code on the same branch.</description>
    </item>
    
  </channel>
</rss>